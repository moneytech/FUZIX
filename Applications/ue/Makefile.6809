PLATFORM = 6809
CC = m6809-unknown-gcc
ASM = m6809-unknown-as
AR = m6809-unknown-ar
LINKER = m6809-unknown-ld
CFLAGS = -I../../Library/include -I../../Library/include/6809 -Os
LINKER_OPT = --oformat=raw -L../../Library/libs -lc6809
LIBGCCDIR = $(dir $(shell $(CC) -print-libgcc-file-name))
LINKER_OPT += -L$(LIBGCCDIR) -lgcc -Map=$@.map
LINKER_OPT += --script=../util/$(TARGET).link
ASM_OPT = -o
CRT0 = ../../Library/libs/crt0_6809.o
CRT0NS = ../../Library/libs/crt0nostdio_6809.o

.SUFFIXES: .c .o

APPS = ue.fuzix ue.ansi ue

SRCS  = ue.c term-fuzix.c term-ansi.c term.c

OBJS = $(SRCS:.c=.o)

all: $(APPS) size.report

$(APPS): ue.h

ue.fuzix: ue.o term-fuzix.o
	$(LINKER) -o $@ $(LINKER_OPT) $(CRT0NS) ue.o term-fuzix.o

ue.ansi: ue.o term-ansi.o
	$(LINKER) -o $@ $(LINKER_OPT) $(CRT0) ue.o term-ansi.o

ue: ue.o term.o
	$(LINKER) -o $@ $(LINKER_OPT) $(CRT0NS) ue.o term.o -ltermcap6809

size.report: $(APPS)
	ls -l $< > $@

clean:
	rm -f $(OBJS) $(APPS) $(SRCS:.c=) *.lst *.map size.report *.o *.rel

