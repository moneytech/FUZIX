PLATFORM = 68000
CC = m68k-uclinux-gcc
ASM = m68k-uclinux-as
AR = m68k-uclinux-ar
LINKER = m68k-uclinux-ld
CFLAGS = -fno-strict-aliasing -fomit-frame-pointer -fno-builtin -msoft-float -Wall -m68000 -Os -I../../Library/include -I../../Library/include/68000
LINKER_OPT = -L../../Library/libs -lc68000
LIBGCCDIR = $(dir $(shell $(CC) -print-libgcc-file-name))
LINKER_OPT += --emit-relocs -L$(LIBGCCDIR) -lgcc -T ../../Library/elf2flt.ld
CRT0 = ../../Library/libs/crt0_68000.o
CRT0NS = ../../Library/libs/crt0nostdio_68000.o
# For now while we get going. Really we want to use some kind of elf2zmagic
# with relocs.
ELF2FUZIX = elf2flt -s 16384
.SUFFIXES: .c .o

LIBDIR	=/usr/bin
LDFLAGS	=

DEFS	=

OBJS = initials.o data.o error.o expr.o function.o gen.o io.o \
       lex.o main.o outstack.o preproc.o primary.o stmt.o struct.o sym.o while.o

OBJ_Z80 = codez80.o
OBJ_8080 = code8080.o
OBJ_6801 = code6801.o
OBJ_6809 = code6809.o

OBJ_COPT = copt.o

INC = data.h defs.h prototype.h

OBJS_ALL = $(OBJS) $(OBJ_Z80) $(OBJ_8080)
all:    scc6801 scc6809 scc8080 sccz80 copt

sccz80: $(CRT0NS) $(OBJS) $(OBJ_Z80)
	$(LINKER) $^ -o $@.bin $(LINKER_OPT)
	$(ELF2FUZIX) -o $@ $@.bin

scc8080: $(CRT0NS) $(OBJS) $(OBJ_8080)
	$(LINKER) $^ -o $@.bin $(LINKER_OPT)
	$(ELF2FUZIX) -o $@ $@.bin

scc6801: $(CRT0NS) $(OBJS) $(OBJ_6801)
	$(LINKER) $^ -o $@.bin $(LINKER_OPT)
	$(ELF2FUZIX) -o $@ $@.bin

scc6809: $(CRT0NS) $(OBJS) $(OBJ_6809)
	$(LINKER) $^ -o $@.bin $(LINKER_OPT)
	$(ELF2FUZIX) -o $@ $@.bin

copt:	$(CRT0) $(OBJ_COPT)
	$(LINKER) $^ -o $@.bin $(LINKER_OPT)
	$(ELF2FUZIX) -o $@ $@.bin

clean:
	rm -f $(OBJ) scc8080 sccz80 scc6801 scc6809 *.o *~

.c.o:
	$(CC) $(COPT) $(CFLAGS) -c $< -o $@

$(OBJS_ALL) : $(INC)

clean:
	rm -f *~ *.o *.asm *.lst *.sym *.o *.map *.noi *.bin *.lk
